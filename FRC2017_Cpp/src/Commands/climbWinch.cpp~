// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "climbWinch.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

climbWinch::climbWinch(): Command() {
        // Use requires() here to declare subsystem dependencies
    // eg. requires(Robot::chassis.get());
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Requires(Robot::climber.get());
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
}

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

// Called just before this Command runs the first time
void climbWinch::Initialize() {
	SmartDashboard::PutBoolean("DB/Button 0", false);
	Robot::climber->StopWinch();
}

// Called repeatedly when this Command is scheduled to run
void climbWinch::Execute() {

	const double MAX_VOLTAGE = 35;
	const int WINCH_PDB_VALUE = 3;
	double currentVoltage=RobotMap::pdb->GetCurrent(WINCH_PDB_VALUE);
	if (currentVoltage>=MAX_VOLTAGE) {
		Robot::climber->StopWinch();
	}else{
		Robot::climber->WindWinch();
	//}
}

// Make this return true when this Command no longer needs to run execute()
bool climbWinch::IsFinished() {
	double currentVoltage=RobotMap::pdb->GetCurrent(Robot::climber->WINCH_PDB_VALUE);
	return (currentVoltage >= Robot::climber->MAX_VOLTAGE);
}

// Called once after isFinished returns true
void climbWinch::End() {
	Robot::climber->StopWinch();
}

// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void climbWinch::Interrupted() {
	Robot::climber->StopWinch();
}
