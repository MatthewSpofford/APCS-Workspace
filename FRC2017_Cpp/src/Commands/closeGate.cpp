// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "closeGate.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

closeGate::closeGate(bool startInAuto): Command() {
    m_startInAuto = startInAuto;
        // Use requires() here to declare subsystem dependencies
    // eg. requires(Robot::chassis.get());
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Requires(Robot::gearPickup.get());
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
}

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

// Called just before this Command runs the first time
void closeGate::Initialize() {
	if((Robot::gearPickup->CompletedWallParallel == SUCCESS ||  Robot::gearPickup->CompletedWallParallel == RUNNING) && !m_startInAuto)
		closeGate::Cancel();
	end = false;
}

// Called repeatedly when this Command is scheduled to run
void closeGate::Execute() {
	if(!(Robot::StopCommands || IsTimedOut() || Robot::StopCommands || Robot::gearPickup->CompletedWallParallel == FAILURE ||
		 Robot::gearPickup->autoPlaceTriggered || Robot::gearPickup->openTriggered))
	{
		Robot::gearPickup->closeTriggered = true;
		if(Robot::gearPickup->currentGateState == CLOSED && end == false)
		{
			Robot::gearPickup->OpenGateHalfway();
			Robot::gearPickup->currentGateState = HALFWAY;
			end = true;
		}
		else if(Robot::gearPickup->currentGateState == HALFWAY && end == false)
		{
			Robot::gearPickup->CloseGate();
			Robot::gearPickup->currentGateState = OPEN;
			end = true;
		}
	}
	if(timeoutTriggered == false)
	{
		SetTimeout(0.20);
		timeoutTriggered = true;
	}
}

// Make this return true when this Command no longer needs to run execute()
bool closeGate::IsFinished() {
    return Robot::StopCommands || IsTimedOut() || Robot::gearPickup->CompletedWallParallel == FAILURE || Robot::gearPickup->autoPlaceTriggered ||
    	   Robot::gearPickup->openTriggered;
}
// Called once after isFinished returns true
void closeGate::End() {
	Robot::drivetrain->IgnoreJoystickInput(false);
	Robot::gearPickup->closeTriggered = false;
}

// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void closeGate::Interrupted() {
	Robot::drivetrain->IgnoreJoystickInput(false);
	Robot::gearPickup->closeTriggered = false;
}
