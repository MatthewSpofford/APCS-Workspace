// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#ifndef OI_H
#define OI_H

#include "WPILib.h"

class OI {
private:
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	std::shared_ptr<Joystick> xboxController;
	std::shared_ptr<JoystickButton> selectButton;
	std::shared_ptr<JoystickButton> leftBumper;
	std::shared_ptr<JoystickButton> rightBumper;
	std::shared_ptr<JoystickButton> joystickButton2;
	std::shared_ptr<JoystickButton> yButton;
	std::shared_ptr<JoystickButton> joystickButton1;
	std::shared_ptr<JoystickButton> aButton;
	std::shared_ptr<JoystickButton> startButton;
	std::shared_ptr<Joystick> rightJoystick;
	std::shared_ptr<Joystick> leftJoystick;
	std::shared_ptr<JoystickButton> recalibrateWheels;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

	std::shared_ptr<JoystickButton> flushButton;
	std::shared_ptr<XboxController> controller;
	std::shared_ptr<JoystickButton> centricModeToggle;
	std::shared_ptr<JoystickButton> climberModeHold;
	std::shared_ptr<JoystickButton> positionPusher;
	std::shared_ptr<JoystickButton> shootButton;
public:
	OI();

	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=PROTOTYPES

	std::shared_ptr<Joystick> getLeftJoystick();
	std::shared_ptr<Joystick> getRightJoystick();
	std::shared_ptr<Joystick> getxboxController();

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=PROTOTYPES

	bool GetPushButton();
	bool GetButton9();
	bool GetButton10();
	bool GetStartButton();
	bool GetRightTriggerPressed();
	double GetClimberSpeed(const double MIN_SPEED);

	void rumble(double value);
};

#endif
